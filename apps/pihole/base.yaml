apiVersion: v1
kind: Namespace
metadata:
  name: pihole
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: pihole-svc
  namespace: pihole
---
apiVersion: secrets-store.csi.x-k8s.io/v1
kind: SecretProviderClass
metadata:
  name: pihole-spc
  namespace: pihole
spec:
  provider: vault     
  secretObjects:
  - secretName: pihole-admin
    type: Opaque
    data: 
    - objectName: pihole-admin
      key: password                    
  parameters:                                 
    roleName: "${cluster_name}-pihole-pihole-svc-pihole-admin"
    vaultAddress: "http://vault.vault.svc.cluster.local:8200"
    objects:  |
      - secretPath: "k8s-${cluster_name}/kubernetes-${cluster_name}-pihole-admin"
        objectName: "pihole-admin"
        secretKey: "token"
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: pihole-persistent
  namespace: pihole
spec:
  accessModes:
    - ReadWriteOnce
  volumeMode: Filesystem
  resources:
    requests:
      storage: 10Gi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: pihole-deployment
  namespace: pihole
spec:
  replicas: 1
  selector:
    matchLabels:
      app: pihole
  template:
    metadata:
      labels:
        app: pihole
    spec:
      serviceAccountName: pihole-svc
      #hostNetwork: true
      containers:
      - name: pihole
        image: pihole/pihole:latest
        securityContext:
          capabilities:
            add: 
            - "CAP_CHOWN"
            - "CAP_NET_BIND_SERVICE"
            - "CAP_NET_RAW"
            - "CAP_NET_ADMIN"
            - "CAP_SETFCAP"
        ports:
        - containerPort: 443
        - containerPort: 53
          protocol: UDP
        # - containerPort: 53
        #   protocol: TCP
        env:
          - name: FTLCONF_webserver_api_password
            valueFrom:
              secretKeyRef:
                name: pihole-admin
                key: password
          # - name: DNSMASQ_USER
          #   value: root
        volumeMounts:
        - mountPath: /etc/pihole 
          name: pihole-data
        - mountPath: /secret-bind 
          name: pihole-spc
      volumes:
      - name: pihole-data
        persistentVolumeClaim:
          claimName: pihole-persistent
      - name: pihole-spc
        csi:
          driver: secrets-store.csi.k8s.io
          readOnly: true
          volumeAttributes:
            secretProviderClass: "pihole-spc"
---
apiVersion: v1
kind: Service
metadata:
  name: pihole-internal
  namespace: pihole
spec:
  type: ClusterIP
  selector:
    app: pihole
  ports:
    - name: http
      protocol: TCP
      port: 80
      targetPort: 80
    - name: dns-udp
      protocol: UDP
      port: 53
      targetPort: 53
    # - name: dns-tcp
    #   protocol: TCP
    #   port: 53
    #   targetPort: 53
---
apiVersion: v1
kind: Service
metadata:
  name: pihole-external-udp
  namespace: pihole
  annotations:
  #  #external-dns.alpha.kubernetes.io/hostname: "${pihole_hostname}"
    metallb.universe.tf/loadBalancerIPs: ${pihole_ip}
    metallb.universe.tf/allow-shared-ip: "247"
spec:
  type: LoadBalancer
  externalTrafficPolicy: Local
  selector:
    app: pihole
  ports:
    - name: dns-udp
      protocol: UDP
      port: 53
      targetPort: dns-udp
# ---
# apiVersion: v1
# kind: Service
# metadata:
#   name: pihole-external-tcp
#   namespace: pihole
#   annotations:
#    #external-dns.alpha.kubernetes.io/hostname: "${pihole_hostname}"
#     metallb.universe.tf/loadBalancerIPs: ${pihole_ip}
#     metallb.universe.tf/allow-shared-ip: "247"
# spec:
#   type: LoadBalancer
#   #externalTrafficPolicy: Local
#   selector:
#     app: pihole
#   ports:
#     - name: https
#       protocol: TCP
#       port: 443
#       targetPort: 443





